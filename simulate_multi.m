function [x,z1,z2,A,time,cause]=simulate_multi(n,lam10,lam11,gam11,gam12,...
                lam20,lam21,gam21,gam22,lambda,S,cstart,nc)

x=unifrnd(0,1,n,1);
z1=binornd(1,0.5,n,1);
pd = makedist('Normal','mu',0,'sigma',1);
trunc = truncate(pd, -1, 1);
z2=random(trunc,n,1);


A=S*z2+(1-S)*unifrnd(0,2,n,1);
%corr(A,z2)

tau=3;

tt=0:(tau/100):tau;
X=[ones(n,1),x];
Z=[z1,z2];
lam1=[lam10,lam11];
gam1=[gam11,gam12];
lam2=[lam20,lam21];
gam2=[gam21,gam22];

F1x=cif(tau,lam1,X,gam1,Z);
F2x=cif(tau,lam2,X,gam2,Z);
p3=1-(F1x+F2x);

causes=mnrnd(1,[F1x,F2x,p3]);
cause=causes*[1;2;0];
% tabulate(cause12)

%% stime: failure time
% failure time is randomly generated by conditional probability
stime=zeros(n,1);
for i = 1:n
    if cause(i)==1
        myhazx=cif(tt,lam1,X(i,:),gam1,Z(i,:))/F1x(i);
        stime(i)=interp1(myhazx,tt,unifrnd(0,1),'linear');
    elseif cause(i)==2
        myhazx=cif(tt,lam2,X(i,:),gam2,Z(i,:))/F2x(i);
        stime(i)=interp1(myhazx,tt,unifrnd(0,1),'linear');
    else
        stime(i)=tau;
    end
end

%% ctime: censoring time
% generate censoring time
if nc==0
    cstar=cstart+exprnd(1/lambda,n,1);
    ctime=min([cstar, repmat(tau,n,1)],[],2);
else
    ctime=repmat(tau,n,1);
end

%% time: observed time
% observed time is min of censored and true
time=min([ctime,stime],[],2);
status=stime<ctime;
cause(status==0)=0;
% tabulate(cause12)
